{"version":3,"sources":["Algorithms/CoinChangeMaking.js","Screens/Maths/CoinChangeMaking.js","../node_modules/react-bootstrap/esm/CardDeck.js"],"names":["CoinChangeMaking","arry","lengthOfNums","cents","useState","coins","setCoins","setCents","coinChange","setCoinChange","init","setInit","Row","Col","title","isOption","CardDeck","md","Form","Group","controlId","Label","Control","defaultValue","onChange","new_coins","document","getElementById","value","split","map","coin","parseInt","isNaN","length","pop","coinChangeMaking","type","placeholder","Text","className","new_cents","console","log","createWithBsPrefix"],"mappings":"qMAMA,MAAMA,EAAmB,CAACC,EAAMC,EAAcC,IAG9B,IAAVA,EAAoB,EAIpBA,EAAQ,GAKRD,GAAgB,GAAKC,GAAS,EALZ,EAUpBH,EAAiBC,EAAMC,EAAe,EAAGC,GACzCH,EAAiBC,EAAMC,EAAcC,EAAQF,EAAKC,EAAe,IAGtDF,QCuDAA,UA3EU,KAAO,MAAD,EACHI,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,OAEHF,qBAFG,mBAEtBD,EAFsB,KAEfI,EAFe,OAGOH,mBAAS,OAHhB,mBAGtBI,EAHsB,KAGVC,EAHU,OAILL,oBAAS,GAJJ,mBAItBM,EAJsB,KAIhBC,EAJgB,KAyB7B,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,MAAM,qBAAqBC,UAAQ,GAAzC,sQAOJ,kBAACH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMF,MAAM,SACV,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKI,GAAI,IACP,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,aAAclB,EACdmB,SAzCF,KAClB,IAAKrB,EAAO,OACZ,IAAIsB,EAAYC,SAASC,eAAe,SAASC,MAAMC,MAAM,KAC7DJ,EAAYA,EAAUK,IAAKC,GAASC,SAASD,IACzCE,MAAMR,EAAUA,EAAUS,OAAS,KACrCT,EAAUU,MAEZ7B,EAASmB,GACThB,EAAc2B,EAAiBX,EAAWA,EAAUS,OAAQ/B,IAC5DQ,GAAQ,IAiCY0B,KAAK,OACLC,YAAY,cAEd,kBAACpB,EAAA,EAAKqB,KAAN,CAAWC,UAAU,cAArB,mCAEF,kBAACtB,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,aAAcpB,EACdqB,SAxCF,KAClB,IAAIiB,EAAYT,SAASN,SAASC,eAAe,SAASC,OAC1Dc,QAAQC,IAAIF,GACPA,IACLlC,EAASkC,GACThC,EAAc2B,EAAiB/B,EAAOA,EAAM6B,OAAQO,IACpD9B,GAAQ,KAmCY0B,KAAK,SACLC,YAAY,SAEd,kBAACpB,EAAA,EAAKqB,KAAN,CAAWC,UAAU,cAArB,2BAMV,kBAAC,IAAD,CAAM1B,MAAM,UAAUJ,EAAOF,EAAa,a,gCC1EtD,YACeoC,gBAAmB","file":"static/js/23.06fa9f9e.chunk.js","sourcesContent":["/**\n * @param {number[]} arry\n * @param {number} lengthOfNums\n * @param {number} cents\n * @return {number}\n */\nconst CoinChangeMaking = (arry, lengthOfNums, cents) => {\n  // If cents is 0 then there is 1 solution\n  // (do not include any coin)\n  if (cents === 0) return 1;\n\n  // If cents is less than 0 then no\n  // solution exists\n  if (cents < 0) return 0;\n\n  // If there are no coins and cents\n  // is greater than 0, then no\n  // solution exist\n  if (lengthOfNums <= 0 && cents >= 1) return 0;\n\n  // count is sum of solutions (i)\n  // including S[m-1] (ii) excluding S[m-1]\n  return (\n    CoinChangeMaking(arry, lengthOfNums - 1, cents) +\n    CoinChangeMaking(arry, lengthOfNums, cents - arry[lengthOfNums - 1])\n  );\n};\nexport default CoinChangeMaking;\n","import React, { useState } from \"react\";\nimport { Row, Col, Form, CardDeck } from \"react-bootstrap\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport Card from \"../../App/components/MainCard\";\nimport coinChangeMaking from \"../../Algorithms/CoinChangeMaking\";\n\nconst CoinChangeMaking = () => {\n  const [coins, setCoins] = useState(\"\");\n  const [cents, setCents] = useState();\n  const [coinChange, setCoinChange] = useState(\"---\");\n  const [init, setInit] = useState(false);\n\n  const updateCoins = () => {\n    if (!cents) return;\n    let new_coins = document.getElementById(\"coins\").value.split(\" \");\n    new_coins = new_coins.map((coin) => parseInt(coin));\n    if (isNaN(new_coins[new_coins.length - 1])) {\n      new_coins.pop();\n    }\n    setCoins(new_coins);\n    setCoinChange(coinChangeMaking(new_coins, new_coins.length, cents));\n    setInit(true);\n  };\n  const updateCents = () => {\n    let new_cents = parseInt(document.getElementById(\"cents\").value);\n    console.log(new_cents);\n    if (!new_cents) return;\n    setCents(new_cents);\n    setCoinChange(coinChangeMaking(coins, coins.length, new_cents));\n    setInit(true);\n  };\n  return (\n    <Aux>\n      <Row>\n        <Col>\n          <Card title=\"Coin Change Making\" isOption>\n            The Coin Change Problem is considered by many to be essential to understanding the\n            paradigm of programming known as Dynamic Programming. The two often are always paired\n            together because the coin change problem encompass the concepts of dynamic programming.\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CardDeck>\n            <Card title=\"Input\">\n              <Row>\n                <Col md={12}>\n                  <Form>\n                    <Form.Group controlId=\"coins\">\n                      <Form.Label>Input Coins</Form.Label>\n                      <Form.Control\n                        defaultValue={coins}\n                        onChange={updateCoins}\n                        type=\"text\"\n                        placeholder=\"1 2 3 ...\"\n                      />\n                      <Form.Text className=\"text-muted\">Kindly Input Coins with Spaces</Form.Text>\n                    </Form.Group>\n                    <Form.Group controlId=\"cents\">\n                      <Form.Label>Input Cents</Form.Label>\n                      <Form.Control\n                        defaultValue={cents}\n                        onChange={updateCents}\n                        type=\"number\"\n                        placeholder=\"3...\"\n                      />\n                      <Form.Text className=\"text-muted\">Kindly Input Cents</Form.Text>\n                    </Form.Group>\n                  </Form>\n                </Col>\n              </Row>\n            </Card>\n            <Card title=\"Output\">{init ? coinChange : \"---\"}</Card>\n          </CardDeck>\n        </Col>\n      </Row>\n    </Aux>\n  );\n};\n\nexport default CoinChangeMaking;\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-deck');"],"sourceRoot":""}