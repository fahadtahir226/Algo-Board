(this["webpackJsonpalgo-board"]=this["webpackJsonpalgo-board"]||[]).push([[14],{138:function(A,F,D){"use strict";D.r(F);var H=D(55),e=D(0),t=D.n(e),I=D(66),n=D(58),a=D(60),l=D(149),T=D(15),r=D(49),R=D(68),c=D(57);F.default=()=>{const A=Object(e.useState)(""),F=Object(H.a)(A,2),D=F[0],o=F[1],u=Object(e.useState)(""),s=Object(H.a)(u,2),i=s[0],m=s[1],d=Object(e.useState)(""),g=Object(H.a)(d,2),p=g[0],h=g[1];return t.a.createElement(T.a,null,t.a.createElement(I.a,null,t.a.createElement(n.a,null,t.a.createElement(r.a,{title:"Longest Common Subsequence"},"Longest Common Subsequence Problem has two sequences and we have to find the length of longest subsequence present in both of them. A subsequence is a sequence that appears in the same relative order, but not necessarily contiguous."))),t.a.createElement(I.a,null,t.a.createElement(n.a,null,t.a.createElement(a.a,null,t.a.createElement(r.a,{title:"Input",isOption:!0,setSample:A=>{console.log(A),o(c.c[A][0]),m(c.c[A][1]),h(Object(R.a)(c.c[A][0].split(""),c.c[A][1].split("")).join(""))}},t.a.createElement(I.a,null,t.a.createElement(n.a,{md:12},t.a.createElement(l.a,null,t.a.createElement(l.a.Group,{controlId:"formBasicEmail"},t.a.createElement(l.a.Label,null,"First String"),t.a.createElement(l.a.Control,{defaultValue:D,id:"str1",onChange:()=>{let A=document.getElementById("str1").value;o(A),h(Object(R.a)(A.split(""),i.split("")).join(""))},type:"text",placeholder:"My String..."}),t.a.createElement(l.a.Text,{className:"text-muted"},"Kindly Input First String")),t.a.createElement(l.a.Group,{controlId:"exampleForm.ControlTextarea1"},t.a.createElement(l.a.Label,null,"Second String"),t.a.createElement(l.a.Control,{defaultValue:i,id:"str2",onChange:()=>{let A=document.getElementById("str2").value;m(A),h(Object(R.a)(D.split(""),A.split("")).join(""))},type:"text",placeholder:"My String..."}),t.a.createElement(l.a.Text,{className:"text-muted"},"Kindly Input Second String")))))),t.a.createElement(r.a,{title:"Output"},t.a.createElement("p",{className:"ml-3"},p.length<1?"---":p))))))}},57:function(A,F,D){"use strict";D.d(F,"a",(function(){return H})),D.d(F,"c",(function(){return e})),D.d(F,"b",(function(){return t}));const H=[[1,2,3],[2,3,4],[2,3,4],[1,2,4,1],[9,2,4,5],[9,0,4,5],[1,4,2,5],[2,5,1,2],[6,2,4,1],[5,1,8,2]],e=[["AFAFAHHAHFADAFAFTAHHAHHAFAFFDAFAFHADDAAFAFFAFADAFAFAHHAHHADDAAFAFFAHDAADFARDHDAIADAAD","FATDAFAFAHHAHHADDAAFAFFAHDAADFADAFAFAHHAHFADAFAFAHHAHHADDAAFAFFDAFARRRRFHADDAAFAFFAHDAADHADAAID"],["FAAFADDAAFAFFAHDATTTADFADAFRRRRAFAHFAHHAHHAHAHIIIIIFADAFAFAHHAHHAAFAFFTTTTDAFAFHARRRRDDHDAADHADAAD","FAFAAHHADDAAFAFFAADFADAFADAFTRIAHHAHHADDAAFAFFAHDAADFADAFAFAHHAHHADAADFAFAHHAHHADDTRIAAHDAAD"],["FADAFAAFFAHTTTTTFADAFAFAHHAHFAIIIIIIIAAFAHHRIRIRIDDAAFFAFFDAFAFHADDTITIFFAHDAADHADAAD","FADAFAFAHHATADAFAFFAHDAADFADAFATITIHHAHHADDFADAFAFAHRIRIRIFAFFDAFAFHTRIAAFAFFAHDAADAAAAD"],["FAAFAFFAHDAADFADAFAFAHHAHFADAFAFAHHAHHADDFAFFDAFAFHADDAADAFAFAHHAHHADDAFAFFAHDHADAAD","FADAFAFAHHAHHADDAAFAFFAHAFADAFAFAHHAHHADDAAFAFFDAFAFHADDAAFAFFAHDAADADFADAFAFAHHAHHADDFAHDAAD"],["FADAFAFAHHARITIRITIFITIRFTIRFRIRFAHHARITIFARIFFFAHDAADFHHADDAAFAFFDAFAFHRIRITIAAFAFFAHDAADHADAAD","FADAFFADAFAFAHHAHFAITIAIFTRHDTTFAFAHHRITITIHADAADAFAHHAHHADDAITITRITIRDFADAFAFAHHAHHADDAAFAFFAHDA"],["FADAFAADDAAFAFFAHDAADFADAFAAITIAIFTRFAFAHHAHHADDAAFAFFFAHHAHHDAITIAIFTRFADDAAFAFFAHDAADHADAAD","FHAHHADDAAFAFFAHDAADAAITIAIFTRHHAFADAFAFAHAITIRIITIFATIAHHADDAAFAFFAHDAADFADAFAFAHHAHHAAITIAIFTRAD"],["FAAITIAIFTRADAFAFAHHAHFADAFAFAAITIAIFTRAHHAFAFAHHAHHADDAAFAFFAHDAADFADDAAFAFFDAFAFHADFAFFAHDAADHRTIRFD","FADATIRITIRFITIRFATIFTAFAHHAHHADDAAFAFFAFADAFAFAHHAHHADDAAFAITIAIFTRFFAHDAADFADAFAFAHHAHHADAADADFAHHAAFA"],["FADAFTRIFTIFFAHDAADFADAFAFHAHFADAFTFIRITIAFAHHAHHADFAHHAHHADDAAFAFFDAFAFHADDAAFARTIRFAADHADAAD","FAHHAHHADDAAFAFFAHDAADFADAFATRIFITIFHFADAFAFAHHAHHADDAAFATRITIFIFAHDAADFADAFAFAHTRITIFIAADHADDAAFAFTRIRITIFAHDAAD"],["FAADFADAFAFAHHTAHRFIIRITFARDAFATFAHHAIHTHAIDDAFIRRITADAIFAFAHHTAHHAIDDAARFAFFAIFIRITHYDAFRAFFDHADDAFIRITAFAFFAHDAADHAIDATAD","FADAFAFAHFIRITHAHHADDAAFAFFDAFFIRITAFHADDAAFAFFFIRITFADAFAFAHFIRITHAHHADDAAFATTFFDAFIAIFHRIADDAAFATIFFAHDAADAHDAAD"],["HHFIRITAHHADDAAFAFFAHFIRITDAADFADFADRAFAFAIAFAFATHHAHIFADARFAFAHHTAHHIADDAATFAFFRDAFIAFHADIDIFFATHDTAARDIHADRAAD","FADAFHHAHHAFIRITDDAAFAFFAHDAAFIRITDIFFAFRAHHTAHHADIDAAFRAFFAFIADAFTAFAHHTAHHADDAAFAFIFAHDARADFIADAFRAFAHHIAHTHADAADHDAAD"]],t=[[10,-68,7,80,82,90,8,-39,-36,73,12,92,100,-64,-33,86,85,1,-34,91,74,-37,42,57,-31,55,14,82,72,46,70,10,76,-67,-62,28,8,86,-32,-65,48,-60,23,2,-35,-67,96,5,89,12,-36,53,19,94,76,72,-39,-69,29],[27,92,89,58,22,94,-38,-66,95,46,27,85,82,-32,14,-32,50,51,9,43,-34,4,-65,86,94,28,29,-35,50,74,94,25,41,76,-3,53,-65,-3,51,52,11,19,-32,46,-67,-35,48,11,13,81,25,4,26,-30,-69,22,44,84,79,72,-3,75,82,19,-63,86,93,10,51,12,82,82,78,95,52,11,76,81,-38,45,79,48,20,73,-3,52,-62,-38,21,85][91],[58,-31,8,88,0,-68,91,81,-34,1,11,82,-39,90,-33,1,16,78,57,58,73,59,72,71,97,1,-37,88,57,-32,8,-39,10,1,40,94,18,-3,43,99,0,-35,93,-30,-30,91,-66,88,-32,89,94,-3,26,2,96,75,90,50,17,44,10,-31,-66,-30,-62,13,21,-69,29,86,50,89,-65,92,29,-64,-66,73,24,91,18,92,93,75,88,51,84,-68,-31,93],[-66,-35,-68,-6,0,-62,75,-36,27,2,90,18,49,23,0,28,-32,83,95,45,54,74,90,83,0,51,-3,15,74,47,43,70,76,-31,-32,-63,44,56,-68,86,84,-60,87,94,49,23,26,7,-69,-6,59,4,14,70,-63,10,94,92,-61,52,91,99,22,12,-61,82,70,12,8,-64,96,25,51,53,13,1,86,87,-68,84,50,79,20,43,21,71,14,70,11,-60],[45,-38,42,78,86,94,58,25,-63,20,23,96,75,56,-35,24,5,13,10,72,-6,76,20,-30,13,88,53,13,9,12,29,56,91,-69,28,28,15,20,96,88,10,84,75,0,-39,92,24,7,91,77,0,99,21,22,43,17,81,-32,47,77,11,48,40,78,83,74,-38,54,12,97,58,57,-32,9,-30,26,50,-3,50,79,-31,94,40,7,49,-3,74,70,78,90],[78,96,24,88,52,87,-67,81,76,27,94,17,83,-69,92,89,2,86,-34,28,81,95,-39,21,-30,98,81,-38,75,-61,89,2,-6,79,88,-62,43,-62,95,47,19,1,-69,94,26,16,41,7,86,29,-61,93,-61,71,17,-39,57,56,21,45,58,-68,72,71,56,95,83,87,28,95,2,-60,70,42,-30,71,2,48,-39,96,-38,2,59,-69,-68,-62,90,2,-30,27],[97,19,41,-69,82,44,51,10,19,55,90,11,80,26,51,55,54,-67,95,47,-39,16,-3,-39,-6,81,24,13,7,11,-61,70,73,70,82,21,19,-64,48,8,17,93,21,17,86,82,53,83,16,24,-62,81,4,-3,80,-33,79,1,71,-69,40,-34,-3,1,7,-62,46,85,43,-67,50,-62,57,-61,94,-60,73,-3,15,-60,83,55,-38,87,-61,-6,74,7,52,24],[-65,-38,99,-63,13,-63,76,24,-66,-65,84,15,26,-32,90,-61,90,84,29,46,-60,29,17,56,-38,98,57,99,49,-63,76,-62,54,22,-34,-32,5,-61,73,86,-30,-64,92,99,92,14,84,-6,56,48,75,21,43,77,-63,10,23,2,18,12,-60,18,82,14,-30,89,89,96,23,29,80,82,-39,4,83,-63,95,7,80,44,20,22,26,80,27,98,-36,-66,4,80],[81,-65,76,85,77,92,44,12,86,84,1,26,82,57,11,29,89,7,83,-65,-33,-3,18,59,83,-64,72,23,52,-6,21,53,17,-61,89,57,8,-64,93,1,71,-65,59,91,-37,78,-67,13,19,12,1,-39,20,-32,-32,1,45,2,12,17,59,-6,24,81,26,41,14,99,-37,-3,5,-65,29,72,11,84,93,-65,-33,1,-38,41,-39,-3,0,48,-60,99,-66,52]]},60:function(A,F,D){"use strict";var H=D(51);F.a=Object(H.a)("card-deck")},68:function(A,F,D){"use strict";function H(A,F){const D=Array(F.length+1).fill(null).map(()=>Array(A.length+1).fill(null));for(let I=0;I<=A.length;I+=1)D[0][I]=0;for(let I=0;I<=F.length;I+=1)D[I][0]=0;for(let I=1;I<=F.length;I+=1)for(let H=1;H<=A.length;H+=1)A[H-1]===F[I-1]?D[I][H]=D[I-1][H-1]+1:D[I][H]=Math.max(D[I-1][H],D[I][H-1]);if(!D[F.length][A.length])return[""];const H=[];let e=A.length,t=F.length;for(;e>0||t>0;)A[e-1]===F[t-1]?(H.unshift(A[e-1]),e-=1,t-=1):D[t][e]===D[t][e-1]?e-=1:t-=1;return H}D.d(F,"a",(function(){return H}))}}]);
//# sourceMappingURL=14.967bd878.chunk.js.map