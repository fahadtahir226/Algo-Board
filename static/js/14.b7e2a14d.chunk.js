(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{144:function(e,t,a){"use strict";a.r(t);var n=a(63),l=a(0),r=a.n(l),c=a(72),u=a(64),o=a(67),s=a(156),i=a(21),m=a(57),d=a(74);t.default=function(){var e=Object(l.useState)(""),t=Object(n.a)(e,2),a=t[0],g=t[1],h=Object(l.useState)(""),f=Object(n.a)(h,2),p=f[0],E=f[1],b=Object(l.useState)(""),v=Object(n.a)(b,2),S=v[0],j=v[1];return r.a.createElement(i.a,null,r.a.createElement(c.a,null,r.a.createElement(u.a,null,r.a.createElement(m.a,{title:"Longest Common Subsequence"},"Longest Common Subsequence Problem has two sequences and we have to find the length of longest subsequence present in both of them. A subsequence is a sequence that appears in the same relative order, but not necessarily contiguous."))),r.a.createElement(c.a,null,r.a.createElement(u.a,null,r.a.createElement(o.a,null,r.a.createElement(m.a,{title:"Input"},r.a.createElement(c.a,null,r.a.createElement(u.a,{md:12},r.a.createElement(s.a,null,r.a.createElement(s.a.Group,{controlId:"formBasicEmail"},r.a.createElement(s.a.Label,null,"First String"),r.a.createElement(s.a.Control,{defaultValue:a,id:"str1",onChange:function(){var e=document.getElementById("str1").value;g(e),j(Object(d.a)(e.split(""),p.split("")).join(""))},type:"text",placeholder:"My String..."}),r.a.createElement(s.a.Text,{className:"text-muted"},"Kindly Input First String")),r.a.createElement(s.a.Group,{controlId:"exampleForm.ControlTextarea1"},r.a.createElement(s.a.Label,null,"Second String"),r.a.createElement(s.a.Control,{defaultValue:p,id:"str2",onChange:function(){var e=document.getElementById("str2").value;E(e),j(Object(d.a)(a.split(""),e.split("")).join(""))},type:"text",placeholder:"My String..."}),r.a.createElement(s.a.Text,{className:"text-muted"},"Kindly Input Second String")))))),r.a.createElement(m.a,{title:"Output"},r.a.createElement("p",{className:"ml-3"},S.length<1?"---":S))))))}},67:function(e,t,a){"use strict";var n=a(58);t.a=Object(n.a)("card-deck")},74:function(e,t,a){"use strict";function n(e,t){for(var a=Array(t.length+1).fill(null).map(function(){return Array(e.length+1).fill(null)}),n=0;n<=e.length;n+=1)a[0][n]=0;for(var l=0;l<=t.length;l+=1)a[l][0]=0;for(var r=1;r<=t.length;r+=1)for(var c=1;c<=e.length;c+=1)e[c-1]===t[r-1]?a[r][c]=a[r-1][c-1]+1:a[r][c]=Math.max(a[r-1][c],a[r][c-1]);if(!a[t.length][e.length])return[""];for(var u=[],o=e.length,s=t.length;o>0||s>0;)e[o-1]===t[s-1]?(u.unshift(e[o-1]),o-=1,s-=1):a[s][o]===a[s][o-1]?o-=1:s-=1;return u}a.d(t,"a",function(){return n})}}]);
//# sourceMappingURL=14.b7e2a14d.chunk.js.map