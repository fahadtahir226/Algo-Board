{"version":3,"sources":["../node_modules/react-bootstrap/esm/Badge.js","Components/UIElements/Basic/Badges.js","App/components/MainCard.js","App/components/UcFirst.js"],"names":["Badge","React","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","Badges","render","buttonBadges","map","idx","Button","key","UcFirst","text","Row","Col","title","samples","MainCard","state","isOption","this","implementSample","sampleNum","setSample","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","alignRight","Toggle","id","Menu","sample","Item","onClick","href","DEMO","BLANK_LINK","Header","Title","fullCard","position","top","left","right","width","windowWidth","height","windowHeight","loadCard","cardRemove","join","style","in","collapseCard","Body","children","windowSize","string","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/17.7421198e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React, {Component} from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Badge,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nclass Badges extends Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonBadges = buttonVariants.map((variant, idx) => (\r\n            <Button key={idx} variant={variant}>\r\n                <UcFirst text={variant} />\r\n                <Badge variant=\"light\" className=\"ml-1\">4</Badge>\r\n            </Button>\r\n        ));\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Basic Badges\">\r\n                            <h1>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h1>\r\n                            <h2>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h2>\r\n                            <h3>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h3>\r\n                            <h4>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h4>\r\n                            <h5>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h5>\r\n                            <h6>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h6>\r\n                        </Card>\r\n                        <Card title=\"Button Badges\">\r\n                            {buttonBadges}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badges;","import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nconst samples = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n  };\r\n  implementSample = (sampleNum) => {\r\n    this.props.setSample(sampleNum);\r\n  };\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              {samples.map((sample, key) => (\r\n                <Dropdown.Item\r\n                  key={key}\r\n                  as=\"li\"\r\n                  className=\"dropdown-item\"\r\n                  onClick={() => this.implementSample(key)}\r\n                >\r\n                  <i className=\"feather icon-sliders\" />\r\n                  <a href={DEMO.BLANK_LINK}> Test Sample {sample} </a>\r\n                </Dropdown.Item>\r\n              ))}\r\n              {/* <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard ? \"feather icon-minimize\" : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? \"Restore\" : \"Maximize\"} </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={this.state.collapseCard ? \"feather icon-plus\" : \"feather icon-minus\"}\r\n                />\r\n                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? \"Expand\" : \"Collapse\"} </a>\r\n              </Dropdown.Item>\r\n\r\n              <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item> */}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body>{this.props.children}</Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;"],"sourceRoot":""}