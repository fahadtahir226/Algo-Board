{"version":3,"sources":["Components/Other/SamplePage.js","App/components/MainCard.js"],"names":["SamplePage","Component","render","title","samples","MainCard","state","isOption","this","props","implementSample","sampleNum","setSample","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","className","alignRight","Toggle","id","Menu","as","map","sample","key","Item","onClick","href","DEMO","BLANK_LINK","Header","Title","fullCard","position","top","left","right","width","windowWidth","height","windowHeight","loadCard","cardRemove","join","style","in","collapseCard","Body","children","windowSize"],"mappings":"iHAAA,2DAMA,MAAMA,UAAmBC,YACvBC,SACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,MAAM,cACV,meAgBCH,a,gCC7Bf,8EAOA,MAAMI,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC5C,MAAMC,UAAiBJ,YAAW,eAAD,oBAC/BK,MAAQ,CACNC,SAAUC,KAAKC,MAAMF,UAFQ,KAI/BG,gBAAmBC,IACjBH,KAAKC,MAAMG,UAAUD,IAEvBT,SACE,IAAIW,EAAiBC,EAAQC,EAAiBC,EAC1CC,EAAO,GACPC,EAAY,GAkHhB,OAhHIV,KAAKF,MAAMC,WACbQ,EACE,yBAAKI,UAAU,qBACb,kBAAC,IAAD,CAAUC,YAAY,EAAMD,UAAU,yBACpC,kBAAC,IAASE,OAAV,CAAiBC,GAAG,iBAAiBH,UAAU,YAC7C,uBAAGA,UAAU,kCAEf,kBAAC,IAASI,KAAV,CAAeC,GAAG,KAAKL,UAAU,6BAC9Bf,EAAQqB,IAAI,CAACC,EAAQC,IACpB,kBAAC,IAASC,KAAV,CACED,IAAKA,EACLH,GAAG,KACHL,UAAU,gBACVU,QAAS,IAAMrB,KAAKE,gBAAgBiB,IAEpC,uBAAGR,UAAU,yBACb,uBAAGW,KAAMC,IAAKC,YAAd,gBAAwCN,EAAxC,WAgDdV,EACE,kBAAC,IAAKiB,OAAN,KACE,kBAAC,IAAKC,MAAN,CAAYV,GAAG,MAAMhB,KAAKC,MAAMN,OAC/BY,GAIDP,KAAKF,MAAM6B,WACbjB,EAAY,IAAIA,EAAW,aAC3BL,EAAkB,CAChBuB,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,MAAOhC,KAAKC,MAAMgC,YAClBC,OAAQlC,KAAKC,MAAMkC,eAInBnC,KAAKF,MAAMsC,WACb1B,EAAY,IAAIA,EAAW,aAC3BJ,EACE,yBAAKK,UAAU,eACb,uBAAGA,UAAU,8BAKfX,KAAKF,MAAMuC,aACb3B,EAAY,IAAIA,EAAW,WAGzBV,KAAKC,MAAMS,YACbA,EAAY,IAAIA,EAAWV,KAAKC,MAAMS,YAGxCD,EACE,kBAAC,IAAD,CAAME,UAAWD,EAAU4B,KAAK,KAAMC,MAAOlC,GAC1CG,EACD,kBAAC,IAAD,CAAUgC,IAAKxC,KAAKF,MAAM2C,cACxB,6BACE,kBAAC,IAAKC,KAAN,KAAY1C,KAAKC,MAAM0C,YAG1BrC,GAIE,kBAAC,IAAD,KAAMG,IAIFmC,QAAW/C","file":"static/js/22.b6139fb4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Card from \"../../App/components/MainCard\";\r\n\r\nclass SamplePage extends Component {\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Row>\r\n          <Col>\r\n            <Card title=\"Hello Card\">\r\n              <p>\r\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n                incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\r\n                exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute\r\n                irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n                pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia\r\n                deserunt mollit anim id est laborum.\"\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SamplePage;\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown, Card, Collapse } from \"react-bootstrap\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nconst samples = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nclass MainCard extends Component {\r\n  state = {\r\n    isOption: this.props.isOption,\r\n  };\r\n  implementSample = (sampleNum) => {\r\n    this.props.setSample(sampleNum);\r\n  };\r\n  render() {\r\n    let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n    let card = \"\";\r\n    let cardClass = [];\r\n\r\n    if (this.state.isOption) {\r\n      cardHeaderRight = (\r\n        <div className=\"card-header-right\">\r\n          <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n            <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n              <i className=\"feather icon-more-horizontal\" />\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu as=\"ul\" className=\"list-unstyled card-option\">\r\n              {samples.map((sample, key) => (\r\n                <Dropdown.Item\r\n                  key={key}\r\n                  as=\"li\"\r\n                  className=\"dropdown-item\"\r\n                  onClick={() => this.implementSample(key)}\r\n                >\r\n                  <i className=\"feather icon-sliders\" />\r\n                  <a href={DEMO.BLANK_LINK}> Test Sample {sample} </a>\r\n                </Dropdown.Item>\r\n              ))}\r\n              {/* <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { fullCard: !prevState.fullCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={\r\n                    this.state.fullCard ? \"feather icon-minimize\" : \"feather icon-maximize\"\r\n                  }\r\n                />\r\n                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? \"Restore\" : \"Maximize\"} </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                className=\"dropdown-item\"\r\n                onClick={() => {\r\n                  this.setState((prevState) => {\r\n                    return { collapseCard: !prevState.collapseCard };\r\n                  });\r\n                }}\r\n              >\r\n                <i\r\n                  className={this.state.collapseCard ? \"feather icon-plus\" : \"feather icon-minus\"}\r\n                />\r\n                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? \"Expand\" : \"Collapse\"} </a>\r\n              </Dropdown.Item>\r\n\r\n              <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                <i className=\"feather icon-refresh-cw\" />\r\n                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n              </Dropdown.Item>\r\n              <Dropdown.Item as=\"li\" className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                <i className=\"feather icon-trash\" />\r\n                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n              </Dropdown.Item> */}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    cardHeader = (\r\n      <Card.Header>\r\n        <Card.Title as=\"h5\">{this.props.title}</Card.Title>\r\n        {cardHeaderRight}\r\n      </Card.Header>\r\n    );\r\n\r\n    if (this.state.fullCard) {\r\n      cardClass = [...cardClass, \"full-card\"];\r\n      fullScreenStyle = {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: this.props.windowWidth,\r\n        height: this.props.windowHeight,\r\n      };\r\n    }\r\n\r\n    if (this.state.loadCard) {\r\n      cardClass = [...cardClass, \"card-load\"];\r\n      loader = (\r\n        <div className=\"card-loader\">\r\n          <i className=\"pct-loader1 anim-rotate\" />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.cardRemove) {\r\n      cardClass = [...cardClass, \"d-none\"];\r\n    }\r\n\r\n    if (this.props.cardClass) {\r\n      cardClass = [...cardClass, this.props.cardClass];\r\n    }\r\n\r\n    card = (\r\n      <Card className={cardClass.join(\" \")} style={fullScreenStyle}>\r\n        {cardHeader}\r\n        <Collapse in={!this.state.collapseCard}>\r\n          <div>\r\n            <Card.Body>{this.props.children}</Card.Body>\r\n          </div>\r\n        </Collapse>\r\n        {loader}\r\n      </Card>\r\n    );\r\n\r\n    return <Aux>{card}</Aux>;\r\n  }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n"],"sourceRoot":""}