(this["webpackJsonpalgo-board"]=this["webpackJsonpalgo-board"]||[]).push([[16],{140:function(e,t,a){"use strict";a.r(t);var n=a(56),l=a(0),r=a.n(l),c=a(65),o=a(57),u=a(60),s=a(149),i=a(15),m=a(50),p=a(67);t.default=()=>{const e=Object(l.useState)(""),t=Object(n.a)(e,2),a=t[0],d=t[1],h=Object(l.useState)(""),b=Object(n.a)(h,2),g=b[0],E=b[1],f=Object(l.useState)("---"),y=Object(n.a)(f,2),j=y[0],O=y[1],x=Object(l.useState)(!1),I=Object(n.a)(x,2),S=I[0],C=I[1];return r.a.createElement(i.a,null,r.a.createElement(c.a,null,r.a.createElement(o.a,null,r.a.createElement(m.a,{title:"Word Break"},"Longest Common Subsequence Problem has two sequences and we have to find the length of longest subsequence present in both of them. A subsequence is a sequence that appears in the same relative order, but not necessarily contiguous."))),r.a.createElement(c.a,null,r.a.createElement(o.a,null,r.a.createElement(u.a,null,r.a.createElement(m.a,{title:"Input"},r.a.createElement(c.a,null,r.a.createElement(o.a,{md:12},r.a.createElement(s.a,null,r.a.createElement(s.a.Group,{controlId:"formBasicEmail"},r.a.createElement(s.a.Label,null,"Input Disctionary"),r.a.createElement(s.a.Control,{defaultValue:a,id:"dictionary",onChange:()=>{let e=document.getElementById("dictionary").value;d(e),O(Object(p.a)(e.split(""),g.split("")).join("")),C(!0)},type:"text",placeholder:"Cat Dog Apple Man Butter..."}),r.a.createElement(s.a.Text,{className:"text-muted"},"Kindly Input Words with Spaces")),r.a.createElement(s.a.Group,{controlId:"exampleForm.ControlTextarea1"},r.a.createElement(s.a.Label,null,"Input String"),r.a.createElement(s.a.Control,{defaultValue:g,id:"myString",onChange:()=>{let e=document.getElementById("myString").value;E(e),O(Object(p.a)(a.split(""),e.split("")).join("")),C(!0)},type:"text",placeholder:"myapple..."}),r.a.createElement(s.a.Text,{className:"text-muted"},"Kindly Input string without spaces")))))),r.a.createElement(m.a,{title:"Output"},S?j?"Possible":"Not Possible":"---")))))}},60:function(e,t,a){"use strict";var n=a(51);t.a=Object(n.a)("card-deck")},67:function(e,t,a){"use strict";function n(e,t){const a=Array(t.length+1).fill(null).map(()=>Array(e.length+1).fill(null));for(let c=0;c<=e.length;c+=1)a[0][c]=0;for(let c=0;c<=t.length;c+=1)a[c][0]=0;for(let c=1;c<=t.length;c+=1)for(let n=1;n<=e.length;n+=1)e[n-1]===t[c-1]?a[c][n]=a[c-1][n-1]+1:a[c][n]=Math.max(a[c-1][n],a[c][n-1]);if(!a[t.length][e.length])return[""];const n=[];let l=e.length,r=t.length;for(;l>0||r>0;)e[l-1]===t[r-1]?(n.unshift(e[l-1]),l-=1,r-=1):a[r][l]===a[r][l-1]?l-=1:r-=1;return n}a.d(t,"a",(function(){return n}))}}]);
//# sourceMappingURL=16.2f74abb2.chunk.js.map